/*
API for ppo project

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Order type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Order{}

// Order struct for Order
type Order struct {
	Id         string `json:"id"`
	IdUser     string `json:"idUser"`
	TotalPrice string `json:"totalPrice"`
	IsPoints   string `json:"isPoints"`
	Status     string `json:"status"`
}

// NewOrder instantiates a new Order object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrder(id string, idUser string, totalPrice string, isPoints string, status string) *Order {
	this := Order{}
	this.Id = id
	this.IdUser = idUser
	this.TotalPrice = totalPrice
	this.IsPoints = isPoints
	this.Status = status
	return &this
}

// NewOrderWithDefaults instantiates a new Order object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderWithDefaults() *Order {
	this := Order{}
	return &this
}

// GetId returns the Id field value
func (o *Order) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Order) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Order) SetId(v string) {
	o.Id = v
}

// GetIdUser returns the IdUser field value
func (o *Order) GetIdUser() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IdUser
}

// GetIdUserOk returns a tuple with the IdUser field value
// and a boolean to check if the value has been set.
func (o *Order) GetIdUserOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IdUser, true
}

// SetIdUser sets field value
func (o *Order) SetIdUser(v string) {
	o.IdUser = v
}

// GetTotalPrice returns the TotalPrice field value
func (o *Order) GetTotalPrice() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TotalPrice
}

// GetTotalPriceOk returns a tuple with the TotalPrice field value
// and a boolean to check if the value has been set.
func (o *Order) GetTotalPriceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalPrice, true
}

// SetTotalPrice sets field value
func (o *Order) SetTotalPrice(v string) {
	o.TotalPrice = v
}

// GetIsPoints returns the IsPoints field value
func (o *Order) GetIsPoints() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IsPoints
}

// GetIsPointsOk returns a tuple with the IsPoints field value
// and a boolean to check if the value has been set.
func (o *Order) GetIsPointsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsPoints, true
}

// SetIsPoints sets field value
func (o *Order) SetIsPoints(v string) {
	o.IsPoints = v
}

// GetStatus returns the Status field value
func (o *Order) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *Order) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *Order) SetStatus(v string) {
	o.Status = v
}

func (o Order) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Order) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["idUser"] = o.IdUser
	toSerialize["totalPrice"] = o.TotalPrice
	toSerialize["isPoints"] = o.IsPoints
	toSerialize["status"] = o.Status
	return toSerialize, nil
}

type NullableOrder struct {
	value *Order
	isSet bool
}

func (v NullableOrder) Get() *Order {
	return v.value
}

func (v *NullableOrder) Set(val *Order) {
	v.value = val
	v.isSet = true
}

func (v NullableOrder) IsSet() bool {
	return v.isSet
}

func (v *NullableOrder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrder(val *Order) *NullableOrder {
	return &NullableOrder{value: val, isSet: true}
}

func (v NullableOrder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
