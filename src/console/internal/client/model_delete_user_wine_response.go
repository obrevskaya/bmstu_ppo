/*
API for ppo project

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DeleteUserWineResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeleteUserWineResponse{}

// DeleteUserWineResponse struct for DeleteUserWineResponse
type DeleteUserWineResponse struct {
	Deleted bool `json:"deleted"`
}

// NewDeleteUserWineResponse instantiates a new DeleteUserWineResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteUserWineResponse(deleted bool) *DeleteUserWineResponse {
	this := DeleteUserWineResponse{}
	this.Deleted = deleted
	return &this
}

// NewDeleteUserWineResponseWithDefaults instantiates a new DeleteUserWineResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteUserWineResponseWithDefaults() *DeleteUserWineResponse {
	this := DeleteUserWineResponse{}
	return &this
}

// GetDeleted returns the Deleted field value
func (o *DeleteUserWineResponse) GetDeleted() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Deleted
}

// GetDeletedOk returns a tuple with the Deleted field value
// and a boolean to check if the value has been set.
func (o *DeleteUserWineResponse) GetDeletedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Deleted, true
}

// SetDeleted sets field value
func (o *DeleteUserWineResponse) SetDeleted(v bool) {
	o.Deleted = v
}

func (o DeleteUserWineResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeleteUserWineResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["deleted"] = o.Deleted
	return toSerialize, nil
}

type NullableDeleteUserWineResponse struct {
	value *DeleteUserWineResponse
	isSet bool
}

func (v NullableDeleteUserWineResponse) Get() *DeleteUserWineResponse {
	return v.value
}

func (v *NullableDeleteUserWineResponse) Set(val *DeleteUserWineResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteUserWineResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteUserWineResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteUserWineResponse(val *DeleteUserWineResponse) *NullableDeleteUserWineResponse {
	return &NullableDeleteUserWineResponse{value: val, isSet: true}
}

func (v NullableDeleteUserWineResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteUserWineResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
