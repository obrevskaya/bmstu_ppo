/*
API for ppo project

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AddElemResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddElemResponse{}

// AddElemResponse struct for AddElemResponse
type AddElemResponse struct {
	Added bool `json:"added"`
}

// NewAddElemResponse instantiates a new AddElemResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddElemResponse(added bool) *AddElemResponse {
	this := AddElemResponse{}
	this.Added = added
	return &this
}

// NewAddElemResponseWithDefaults instantiates a new AddElemResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddElemResponseWithDefaults() *AddElemResponse {
	this := AddElemResponse{}
	return &this
}

// GetAdded returns the Added field value
func (o *AddElemResponse) GetAdded() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Added
}

// GetAddedOk returns a tuple with the Added field value
// and a boolean to check if the value has been set.
func (o *AddElemResponse) GetAddedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Added, true
}

// SetAdded sets field value
func (o *AddElemResponse) SetAdded(v bool) {
	o.Added = v
}

func (o AddElemResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddElemResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["added"] = o.Added
	return toSerialize, nil
}

type NullableAddElemResponse struct {
	value *AddElemResponse
	isSet bool
}

func (v NullableAddElemResponse) Get() *AddElemResponse {
	return v.value
}

func (v *NullableAddElemResponse) Set(val *AddElemResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAddElemResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAddElemResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddElemResponse(val *AddElemResponse) *NullableAddElemResponse {
	return &NullableAddElemResponse{value: val, isSet: true}
}

func (v NullableAddElemResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddElemResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
