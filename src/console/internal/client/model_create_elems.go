/*
API for ppo project

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateElems type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateElems{}

// CreateElems struct for CreateElems
type CreateElems struct {
	Elems []Elem `json:"elems"`
}

// NewCreateElems instantiates a new CreateElems object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateElems(elems []Elem) *CreateElems {
	this := CreateElems{}
	this.Elems = elems
	return &this
}

// NewCreateElemsWithDefaults instantiates a new CreateElems object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateElemsWithDefaults() *CreateElems {
	this := CreateElems{}
	return &this
}

// GetElems returns the Elems field value
func (o *CreateElems) GetElems() []Elem {
	if o == nil {
		var ret []Elem
		return ret
	}

	return o.Elems
}

// GetElemsOk returns a tuple with the Elems field value
// and a boolean to check if the value has been set.
func (o *CreateElems) GetElemsOk() ([]Elem, bool) {
	if o == nil {
		return nil, false
	}
	return o.Elems, true
}

// SetElems sets field value
func (o *CreateElems) SetElems(v []Elem) {
	o.Elems = v
}

func (o CreateElems) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateElems) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["elems"] = o.Elems
	return toSerialize, nil
}

type NullableCreateElems struct {
	value *CreateElems
	isSet bool
}

func (v NullableCreateElems) Get() *CreateElems {
	return v.value
}

func (v *NullableCreateElems) Set(val *CreateElems) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateElems) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateElems) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateElems(val *CreateElems) *NullableCreateElems {
	return &NullableCreateElems{value: val, isSet: true}
}

func (v NullableCreateElems) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateElems) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
