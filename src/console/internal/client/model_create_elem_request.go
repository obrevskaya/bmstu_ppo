/*
API for ppo project

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateElemRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateElemRequest{}

// CreateElemRequest struct for CreateElemRequest
type CreateElemRequest struct {
	IdWine string `json:"idWine"`
	Count  int32  `json:"count"`
}

// NewCreateElemRequest instantiates a new CreateElemRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateElemRequest(idWine string, count int32) *CreateElemRequest {
	this := CreateElemRequest{}
	this.IdWine = idWine
	this.Count = count
	return &this
}

// NewCreateElemRequestWithDefaults instantiates a new CreateElemRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateElemRequestWithDefaults() *CreateElemRequest {
	this := CreateElemRequest{}
	return &this
}

// GetIdWine returns the IdWine field value
func (o *CreateElemRequest) GetIdWine() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IdWine
}

// GetIdWineOk returns a tuple with the IdWine field value
// and a boolean to check if the value has been set.
func (o *CreateElemRequest) GetIdWineOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IdWine, true
}

// SetIdWine sets field value
func (o *CreateElemRequest) SetIdWine(v string) {
	o.IdWine = v
}

// GetCount returns the Count field value
func (o *CreateElemRequest) GetCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Count
}

// GetCountOk returns a tuple with the Count field value
// and a boolean to check if the value has been set.
func (o *CreateElemRequest) GetCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Count, true
}

// SetCount sets field value
func (o *CreateElemRequest) SetCount(v int32) {
	o.Count = v
}

func (o CreateElemRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateElemRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["idWine"] = o.IdWine
	toSerialize["count"] = o.Count
	return toSerialize, nil
}

type NullableCreateElemRequest struct {
	value *CreateElemRequest
	isSet bool
}

func (v NullableCreateElemRequest) Get() *CreateElemRequest {
	return v.value
}

func (v *NullableCreateElemRequest) Set(val *CreateElemRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateElemRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateElemRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateElemRequest(val *CreateElemRequest) *NullableCreateElemRequest {
	return &NullableCreateElemRequest{value: val, isSet: true}
}

func (v NullableCreateElemRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateElemRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
